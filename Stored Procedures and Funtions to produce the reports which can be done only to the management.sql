-- Stored Procedures and Funtions to produce the reports which can be done only to the management

-- Functions

-- Total revenue generated by each Aircraft type

CREATE DEFINER=`root`@`localhost` FUNCTION `GetRevenueByAircraftModel`(
	Aircraft_type  INT) RETURNS float
    DETERMINISTIC
BEGIN
    DECLARE totalRevenue FLOAT DEFAULT 0;

    SELECT 
        SUM(b.Price)
    INTO 
        totalRevenue
    FROM 
        booking b
    JOIN flight f ON f.Flight_ID = b.Flight_ID    
    JOIN airplane a ON a.Airplane_ID = f.Airplane_ID
    JOIN airplane_model am ON am.Airplane_model_ID = a.Airplane_model_ID
    WHERE 
        am.Airplane_model_ID = Aircraft_type ;

    RETURN totalRevenue;
END

-- Stored Procedures

-- Given a flight no, all passengers travelling in it (next immediate flight) below age 18, above age 18
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetPassengersByAgeCategory`(IN flightID VARCHAR(10))
BEGIN
    SELECT 
        p.Passenger_ID,
        p.Name,
        p.Date_of_birth,
        CASE
            WHEN TIMESTAMPDIFF(YEAR, p.Date_of_birth, CURDATE()) < 18 THEN 'Below 18'
            ELSE '18 and above'
        END AS AgeCategory
    FROM 
        booking b
    JOIN 
        passenger p ON b.Passenger_ID = p.Passenger_ID
    WHERE 
        b.Flight_ID = flightID
    ORDER BY 
        AgeCategory, p.Name;
END

-- Given a date range, number of passengers travelling to a given destination 
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetPassengerCountByDateRangeAndDestinationName`(
    IN dest_airport_name VARCHAR(100),
    IN start_date DATE,
    IN end_date DATE
)
BEGIN
    SELECT COUNT(DISTINCT p.Passenger_ID) AS PassengerCount
    FROM booking b
    JOIN passenger p ON b.Passenger_ID = p.Passenger_ID
    JOIN flight f ON f.Flight_ID = b.Flight_ID
    JOIN route r ON r.Route_ID = f.Route_ID
	JOIN airport a ON r.Destination_airport_code = a.Airport_code
    WHERE a.Airport_name=dest_airport_name
     AND f.Arrival_date BETWEEN start_date AND end_date;
END

-- Given a date range, number of bookings by each passenger type 
 CREATE DEFINER=`root`@`localhost` PROCEDURE `GetBookingsByDateRangePassengerType`(
	IN startDate DATETIME, 
	IN endDate DATETIME)
BEGIN
    SELECT 
        s.Travel_Class AS PassengerType,
        COUNT(b.Booking_ID) AS NumberOfBookings
    FROM 
        booking b
    JOIN 
        seat s ON b.Seat_ID = s.Seat_ID
    WHERE 
        DATE(b.Issue_date) BETWEEN startDate AND endDate 
    GROUP BY 
        s.Travel_Class;
END

-- Given origin and destination, all past flights, states, passenger counts data
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetAllPastFlightsAndPassengerCountByOriginAndDestination`(
    IN origin_airport_name CHAR(100),
    IN destination_airport_name CHAR(100)
)
BEGIN
    SELECT 
        f.Flight_ID,
        f.Status,
        a1.Airport_name AS OriginAirportName,
        a2.Airport_name AS DestinationAirportName,
        COUNT(DISTINCT p.Passenger_ID) AS PassengerCount
        
    FROM booking b
    JOIN passenger p ON b.Passenger_ID = p.Passenger_ID
    JOIN flight f ON f.Flight_ID = b.Flight_ID    
    JOIN route r ON f.Route_ID = r.Route_ID
    JOIN airport a1 ON r.Origin_airport_code = a1.Airport_code
    
    JOIN airport a2 ON r.Destination_airport_code = a2.Airport_code
    WHERE a1.Airport_name=origin_airport_name
    AND  a2.Airport_name=destination_airport_name
    GROUP BY 
        f.Flight_ID;
END
